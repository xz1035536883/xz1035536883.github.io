<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>池木的独立博客</title>
  <subtitle>Hello,EveryBody!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ryanhome.top/"/>
  <updated>2017-06-01T08:16:15.000Z</updated>
  <id>http://www.ryanhome.top/</id>
  
  <author>
    <name>Ryan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.ryanhome.top/2017/06/01/hello-world/"/>
    <id>http://www.ryanhome.top/2017/06/01/hello-world/</id>
    <published>2017-06-01T12:43:02.179Z</published>
    <updated>2017-06-01T08:16:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="hexo简介" scheme="http://www.ryanhome.top/categories/hexo%E7%AE%80%E4%BB%8B/"/>
    
    
      <category term="hexo" scheme="http://www.ryanhome.top/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>java中static关键字解析</title>
    <link href="http://www.ryanhome.top/2017/06/01/java%E4%B8%ADstatic%E5%85%B3%E9%94%AE%E5%AD%97%E8%A7%A3%E6%9E%90/"/>
    <id>http://www.ryanhome.top/2017/06/01/java中static关键字解析/</id>
    <published>2017-06-01T11:54:00.000Z</published>
    <updated>2017-06-01T12:42:47.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>　　最近写代码的时候发现一些java基础性的东西有些遗忘了，这是一件多么恐怖的事情，所以要狠心恶补一下java基础</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h5 id="（一）static关键字的用途"><a href="#（一）static关键字的用途" class="headerlink" title="（一）static关键字的用途"></a>（一）static关键字的用途</h5><p>　　在《Java编程思想》P86页有这样一段话：</p>
<p>　　<font color="#0099ff">“static方法就是没有this的方法。在static方法内部不能调用非静态方法，反过来是可以的。而且可以在没有创建任何对象的前提下，仅仅通过类本身来调用static方法。这实际上正是static方法的主要用途。”</font></p>
<p>　　这段话虽然只是说明了static方法的特殊之处，但是可以看出static关键字的基本作用，简而言之，一句话来描述就是：<font color="red">方便在没有创建对象的情况下来进行调用（方法,变量）</font></p>
<p>　　很显然，被static关键字修饰的方法或者变量不需要依赖于对象来进行访问，只要类被加载了，就可以通过类名去进行访问。</p>
<p>　　static可以用来修饰类的成员方法、类的成员变量，另外可以编写static代码块来优化程序性能。</p>
<p>１）static变量</p>
<p>　　static变量也称作静态变量，静态变量和非静态变量的区别是：静态变量被所有的对象所共享，在内存中只有一个副本，它当且仅当在类初次加载时会被初始化。而非静态变量是对象所拥有的，在创建对象的时候被初始化，存在多个副本，各个对象拥有的副本互不影响。</p>
<p>　　static成员变量的初始化顺序按照定义的顺序进行初始化。</p>
<p>２）static方法</p>
<p>　　static方法一般称作静态方法，由于静态方法不依赖于任何对象就可以进行访问，因此对于静态方法来说，是没有this的，因为它不依附于任何对象，既然都没有对象，就谈不上this了。并且由于这个特性，在静态方法中不能访问类的非静态成员变量和非静态成员方法，因为非静态成员方法/变量都是必须依赖具体的对象才能够被调用。</p>
<p>　　但是要注意的是，虽然在静态方法中不能访问非静态成员方法和非静态成员变量，但是在非静态成员方法中是可以访问静态成员方法/变量的。举个简单的例子：</p>
<p><img src="" alt=""></p>
<p>在上面的代码中，由于print2方法是独立于对象存在的，可以直接用过类名调用。假如说可以在静态方法中访问非静态方法/变量的话，那么如果在main方法中有下面一条语句：</p>
<p>　　MyObject.print2();</p>
<p>　　此时对象都没有，str2根本就不存在，所以就会产生矛盾了。同样对于方法也是一样，由于你无法预知在print1方法中是否访问了非静态成员变量，所以也禁止在静态成员方法中访问非静态成员方法。</p>
<p>　　而对于非静态成员方法，它访问静态成员方法/变量显然是毫无限制的。</p>
<p>　　因此，如果说想在不创建对象的情况下调用某个方法，就可以将这个方法设置为static。我们最常见的static方法就是main方法，至于为什么main方法必须是static的，现在就很清楚了。因为程序在执行main方法的时候没有创建任何对象</p>
<font color="red">另外记住，即使没有显示地声明为static，类的构造器实际上也是静态方法。</font>

<p>3）static代码块</p>
<p>　　static关键字还有一个比较关键的作用就是 用来形成静态代码块以优化程序性能。static块可以置于类中的任何地方，类中可以有多个static块。在类初次被加载的时候，会按照static块的顺序来执行每个static块，并且只会执行一次。</p>
<p>　　为什么说static块可以用来优化程序性能，是因为它的特性:只会在类加载的时候执行一次。</p>
<h5 id="static关键字误区"><a href="#static关键字误区" class="headerlink" title="static关键字误区"></a>static关键字误区</h5><p>1.能通过this访问静态成员变量吗？</p>
<p>虽然对于静态方法来说没有this，那么在非静态方法中能够通过this访问静态成员变量吗？先看下面的一个例子，这段代码输出的结果是什么？</p>
<pre><code>public class Demo2 {
       static int value = 33;

    public static void main(String[] args) throws Exception{
        new Demo2().printValue();
    }

    private void printValue(){
        int value = 3;
        System.out.println(this.value);
    }
}
</code></pre><p>结果是：33</p>
<p>　　这里面主要考察队this和static的理解。this代表什么？this代表当前对象，那么通过new Main()来调用printValue的话，当前对象就是通过new Main()生成的对象。而static变量是被对象所享有的，因此在printValue中的this.value的值毫无疑问是33。在printValue方法内部的value是局部变量，根本不可能与this关联，所以输出结果是33。在这里永远要记住一点：静态成员变量虽然独立于对象，但是不代表不可以通过对象去访问，所有的静态方法和静态变量都可以通过对象访问（只要访问权限足够）</p>
<p>２．static是不允许用来修饰局部变量</p>
<h5 id="面试笔试题"><a href="#面试笔试题" class="headerlink" title="面试笔试题"></a>面试笔试题</h5><pre><code>public class Test extends Base{

    static{
        System.out.println(&quot;test static&quot;);
    }

    public Test(){
        System.out.println(&quot;test constructor&quot;);
    }

    public static void main(String[] args) {
           new Test();
    }
}

class Base{

    static{
        System.out.println(&quot;base static&quot;);
    }

    public Base(){
        System.out.println(&quot;base constructor&quot;);
    }
}
</code></pre><p>结果是：</p>
<pre><code>base static
test static
base constructor
test constructor
</code></pre><p>　　至于为什么是这个结果，我们先不讨论，先来想一下这段代码具体的执行过程，在执行开始，先要寻找到main方法，因为main方法是程序的入口，但是在执行main方法之前，必须先加载Test类，而在加载Test类的时候发现Test类继承自Base类，因此会转去先加载Base类，在加载Base类的时候，发现有static块，便执行了static块。在Base类加载完成之后，便继续加载Test类，然后发现Test类中也有static块，便执行static块。在加载完所需的类之后，便开始执行main方法。在main方法中执行new Test()的时候会先调用父类的构造器，然后再调用自身的构造器。因此，便出现了上面的输出结果。</p>
<p>2.这段代码的输出结果是什么？</p>
<pre><code>public class Test {
    Person person = new Person(&quot;Test&quot;);
    static{
        System.out.println(&quot;test static&quot;);
    }

    public Test() {
        System.out.println(&quot;test constructor&quot;);
    }

    public static void main(String[] args) {
        new MyClass();
    }
}

class Person{
    static{
        System.out.println(&quot;person static&quot;);
    }
    public Person(String str) {
        System.out.println(&quot;person &quot;+str);
    }
}


class MyClass extends Test {
    Person person = new Person(&quot;MyClass&quot;);
    static{
        System.out.println(&quot;myclass static&quot;);
    }

    public MyClass() {
        System.out.println(&quot;myclass constructor&quot;);
    }
}
</code></pre><p>结果是：</p>
<pre><code>test static
myclass static
person static
person Test
test constructor
person MyClass
myclass constructor
</code></pre><p>　　类似地，我们还是来想一下这段代码的具体执行过程。首先加载Test类，因此会执行Test类中的static块。接着执行new MyClass()，而MyClass类还没有被加载，因此需要加载MyClass类。在加载MyClass类的时候，发现MyClass类继承自Test类，但是由于Test类已经被加载了，所以只需要加载MyClass类，那么就会执行MyClass类的中的static块。在加载完之后，就通过构造器来生成对象。而在生成对象的时候，必须先初始化父类的成员变量，因此会执行Test中的Person person = new Person()，而Person类还没有被加载过，因此会先加载Person类并执行Person类中的static块，接着执行父类的构造器，完成了父类的初始化，然后就来初始化自身了，因此会接着执行MyClass中的Person person = new Person()，最后执行MyClass的构造器。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;　　最近写代码的时候发现一些java基础性的东西有些遗忘了，这是一件多么恐怖的事情，所以要狠心恶补一下java基础&lt;/p&gt;
&lt;h3 id=&quot;
    
    </summary>
    
      <category term="java基础" scheme="http://www.ryanhome.top/categories/java%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="static" scheme="http://www.ryanhome.top/tags/static/"/>
    
      <category term="java" scheme="http://www.ryanhome.top/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo教程: (五)hexo托管到github和coding</title>
    <link href="http://www.ryanhome.top/2017/06/01/hexo%E6%89%98%E7%AE%A1%E5%88%B0github%E5%92%8Ccoding/"/>
    <id>http://www.ryanhome.top/2017/06/01/hexo托管到github和coding/</id>
    <published>2017-06-01T07:09:18.000Z</published>
    <updated>2017-06-01T09:19:06.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>之前我们把hexo托管在github，但是毕竟github是国外的，访问速度上还是有点慢，所以<br>我们可以将代码托管到coding上，从而实现访问的加速。这篇文章待完善。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;之前我们把hexo托管在github，但是毕竟github是国外的，访问速度上还是有点慢，所以&lt;br&gt;我们可以将代码托管到coding上，从
    
    </summary>
    
      <category term="hexo系列教程" scheme="http://www.ryanhome.top/categories/hexo%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://www.ryanhome.top/tags/hexo/"/>
    
      <category term="前端" scheme="http://www.ryanhome.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo教程: (四)hexo 新建文章</title>
    <link href="http://www.ryanhome.top/2017/06/01/hexo-%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0/"/>
    <id>http://www.ryanhome.top/2017/06/01/hexo-新建文章/</id>
    <published>2017-06-01T06:57:29.000Z</published>
    <updated>2017-06-01T09:18:45.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h5><p>在hexo博客根目录（我的是E:Hexo )右键选择Git Bash here执行命令：</p>
<p><code>hexo new &quot;pageName&quot; #新建文章</code></p>
<p>新建的文章你会在下图目录找到。</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/xinjian.png" alt=""></p>
<p>推荐用markdownPad软件打开编辑，你将会看到下图所示内容（你可能没有tags和categories）</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/shouye.png" alt=""></p>
<p>如果你已经在博客增加了“标签”和“分类”功能，那么可以照上图所示给这篇文章分类和加标签，如果不写tags和categories，点击博客左侧“标签”和“分类”按钮将不会找到你所要分类的文章。</p>
<p>现在我们使用markdown进行文章编写，这个markdown语法比较简单也很容易学，并且markdown在很多地方都用到了，学习一下还是很有必要的。嘿嘿</p>
]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h5&gt;&lt;p&gt;在hexo博客根目录（我的是E:Hexo )右键选择Git Bash here执行命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo
    
    </summary>
    
      <category term="hexo系列教程" scheme="http://www.ryanhome.top/categories/hexo%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://www.ryanhome.top/tags/hexo/"/>
    
      <category term="前端" scheme="http://www.ryanhome.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo教程: (三)hexo 的next主题优化</title>
    <link href="http://www.ryanhome.top/2017/06/01/hexo-%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96/"/>
    <id>http://www.ryanhome.top/2017/06/01/hexo-的next主题优化/</id>
    <published>2017-06-01T05:07:43.000Z</published>
    <updated>2017-06-01T09:18:51.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上一篇文章介绍了hexo主题的下载和配置，但是我觉得默认的next主题不太好，我在原来的基础上对它进行了优化。</p>
<hr>
<a id="more"></a>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h5 id="（一）搜索功能"><a href="#（一）搜索功能" class="headerlink" title="（一）搜索功能"></a>（一）搜索功能</h5><p>上一篇文章已经给出了next官方的文档，里面有详细的配置讲解，我选择的第三方搜索服务是<a href="https://www.algolia.com/" target="_blank" rel="external">Algolia</a>,讲道理Swiftype 站内搜索是最好的，但是现在要收费了，很可惜。按照官方文档给出的资料可以配置好站内搜索服务。</p>
<hr>
<h5 id="（二）旋转头像"><a href="#（二）旋转头像" class="headerlink" title="（二）旋转头像"></a>（二）旋转头像</h5><p>这个需要改next主题配置的css文件，如下图所示，并复制下图代码替换原文件。</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/styl.png" alt=""></p>
<pre>
.site-author-image {
  display: block;
  margin: 0 auto;
  padding: $site-author-image-padding;
  max-width: $site-author-image-width;
  height: $site-author-image-height;
  border: $site-author-image-border-width solid $site-author-image-border-color;

   /* 头像圆形 */
  border-radius: 80px;
  -webkit-border-radius: 80px;
  -moz-border-radius: 80px;
  box-shadow: inset 0 -1px 0 #333sf;

  /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束
    (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/
  -webkit-animation: play 2s ease-out 1s 1;
  -moz-animation: play 2s ease-out 1s 1;
  animation: play 2s ease-out 1s 1;

  /* 鼠标经过头像旋转360度 */
  -webkit-transition: -webkit-transform 1.5s ease-out;
  -moz-transition: -moz-transform 1.5s ease-out;
  transition: transform 1.5s ease-out;
}

img:hover {
  /* 鼠标经过停止头像旋转
  -webkit-animation-play-state:paused;
  animation-play-state:paused;*/

  /* 鼠标经过头像旋转360度 */
  -webkit-transform: rotateZ(360deg);
  -moz-transform: rotateZ(360deg);
  transform: rotateZ(360deg);
}

/* Z 轴旋转动画 */
@-webkit-keyframes play {
  0% {
    -webkit-transform: rotateZ(0deg);
  }
  100% {
    -webkit-transform: rotateZ(-360deg);
  }
}
@-moz-keyframes play {
  0% {
    -moz-transform: rotateZ(0deg);
  }
  100% {
    -moz-transform: rotateZ(-360deg);
  }
}
@keyframes play {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(-360deg);
  }
}

.site-author-name {
  margin: $site-author-name-margin;
  text-align: $site-author-name-align;
  color: $site-author-name-color;
  font-weight: $site-author-name-weight;
}

.site-description {
  margin-top: $site-description-margin-top;
  text-align: $site-description-align;
  font-size: $site-description-font-size;
  color: $site-description-color;
}

</pre>

<p>头像图片则要改next主题配置文件中的内容。</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/avator.png" alt=""></p>
<p>并将头像图片放到下图文件中。</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/tomcate.png" alt=""></p>
<hr>
<h5 id="（三）网易云音乐"><a href="#（三）网易云音乐" class="headerlink" title="（三）网易云音乐"></a>（三）网易云音乐</h5><p>一.获取网易云音乐插件外链:<a href="http://music.163.com/#/song?id=432506345" target="_blank" rel="external">http://music.163.com/#/song?id=432506345</a></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/wailian.png" alt=""></p>
<p>二.复制html代码将它放到下图所示地方,当然你也可以放到下图文件所示的其他地方</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/weizhi2.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/weizhi.png" alt=""></p>
<hr>
<h5 id="（四）总结"><a href="#（四）总结" class="headerlink" title="（四）总结"></a>（四）总结</h5><p>每次改完之后别忘了,在本地预览一下</p>
<p><code>hexo g</code></p>
<p><code>hexo s</code></p>
<p>如果是自己想要的效果，可以提交至github了</p>
<p><code>hexo d</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;上一篇文章介绍了hexo主题的下载和配置，但是我觉得默认的next主题不太好，我在原来的基础上对它进行了优化。&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="hexo系列教程" scheme="http://www.ryanhome.top/categories/hexo%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://www.ryanhome.top/tags/hexo/"/>
    
      <category term="前端" scheme="http://www.ryanhome.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo教程: (二)hexo 主题下载及配置</title>
    <link href="http://www.ryanhome.top/2017/06/01/hexo-%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.ryanhome.top/2017/06/01/hexo-主题下载及配置/</id>
    <published>2017-06-01T04:32:21.000Z</published>
    <updated>2017-06-01T09:18:38.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>上一篇文章介绍了如何利用hexo+github搭建自己的博客，但是它默认的主题是landscape，我个人不是很喜欢，我自己使用的主题是next.</p>
<p>其实hexo有很多的主题可以选择你可以参考这个链接:<a href="https://www.zhihu.com/question/24422335" target="_blank" rel="external">https://www.zhihu.com/question/24422335</a>,当然你也可以去官网找你喜欢的主题 :<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></p>
<hr>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><h5 id="安装next主题"><a href="#安装next主题" class="headerlink" title="安装next主题"></a>安装next主题</h5><p>在你hexo目录下右键选择 git bash here，输入以下命令</p>
<p><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p>
<hr>
<a id="more"></a>
<h5 id="启用下载好的主题"><a href="#启用下载好的主题" class="headerlink" title="启用下载好的主题"></a>启用下载好的主题</h5><p>修改你的博客根目录下的config.yml配置文件中的theme属性，将其设置为next</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/zhuti.png" alt=""></p>
<hr>
<h5 id="介绍hexo的-config-yml配置"><a href="#介绍hexo的-config-yml配置" class="headerlink" title="介绍hexo的_config.yml配置"></a>介绍hexo的_config.yml配置</h5><p>您可以在hexo安装文件目录下的_config.yml中修改大部份的配置，我做了中文注释，一看就懂</p>
<pre>
# Hexo Configuration
## Docs: https://hexo.io/docs/configuration.html
## Source: https://github.com/hexojs/hexo/

# Site
title: 池木的独立博客            #网站标题
subtitle: Hello,EveryBody!       #网站副标题
description: 编制未来，程就梦想  #网站描述
author: Ryan                     #您的名字
language: zh-Hans                   #网站使用的语言

# URL
## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'
url: http://www.ryanhome.top
root: /
permalink: :year/:month/:day/:title/
permalink_defaults:

# Directory
source_dir: source     #源文件夹，这个文件夹用来存放内容
public_dir: public     #公共文件夹，这个文件夹用于存放生成的站点文件。
tag_dir: tags          #标签文件夹
archive_dir: archives  #归档文件夹
category_dir: categories   #分类文件夹
code_dir: downloads/code   #nclude code 文件夹

# Writing
new_post_name: :title.md # 新建文章默认文件名
default_layout: post     # 默认布局
titlecase: false # Transform title into titlecase
external_link: true # 在新标签中打开一个外部链接，默认为true
filename_case: 0     #转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大。
render_drafts: false  #是否渲染_drafts目录下的文章，默认为false
post_asset_folder: false #启动 Asset 文件夹
relative_link: false  #把链接改为与根目录的相对位址，默认false
future: true   #显示未来的文章，默认false
highlight:
  enable: true
  line_number: true
  auto_detect: false
  tab_replace:

# Category & Tag
default_category: uncategorized    #默认分类
category_map:                      #分类别名
tag_map:                           #标签别名

# Date / Time format
## Hexo uses Moment.js to parse and display date
## You can customize the date format as defined in
## http://momentjs.com/docs/#/displaying/format/
date_format: YYYY-MM-DD
time_format: HH:mm:ss

# Pagination
## Set per_page to 0 to disable pagination
per_page: 10                    #每页显示的文章量 (0 = 关闭分页功能)
pagination_dir: page            #分页目录

# Extensions
## Plugins: https://hexo.io/plugins/
## Themes: https://hexo.io/themes/
theme: next

# Deployment
## Docs: https://hexo.io/docs/deployment.html
deploy:
  type: git
  repo:
      github: git@github.com:xz1035536883/xz1035536883.github.io.git,master
      coding: git@git.coding.net:xz1035536883/xz1035536883.git,master
# Extensions
## Plugins: http://hexo.io/plugins/
#RSS订阅
feed:
  type: atom
  path: atom.xml
  limit: 100
algolia:
  applicationID: '5CLHAASKAC'
  apiKey: 'a2a0286e70500f220e9dcedfa03b045c'
  adminApiKey: '189b9f4844f6d6348d11ca946aa1c672'
  indexName: 'hexoblob'
  chunkSize: 5000
skip_render:
  -static/**
</pre>


<hr>
<h5 id="主题-config-yml配置"><a href="#主题-config-yml配置" class="headerlink" title="主题_config.yml配置"></a>主题_config.yml配置</h5><p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/zhutip.png" alt=""></p>
<p>下面贴出我的配置</p>
<pre># ---------------------------------------------------------------
# Site Information Settings
# ---------------------------------------------------------------

# Put your favicon.ico into `hexo-site/source/` directory.
favicon: /favicon.ico

# Set default keywords (Use a comma to separate)
keywords: "Hexo, NexT"

# Set rss to false to disable feed link.
# Leave rss as empty to use site's feed link.
# Set rss to specific value if you have burned your feed already.
rss:

# Specify the date when the site was setup
since: 2017

# icon between year and author @Footer
authoricon: heart

# Footer `powered-by` and `theme-info` copyright
copyright: true

reward_comment: 坚持原创技术分享，您的支持将鼓励我继续创作！
wechatpay: /path/to/wechat-reward-image.png
alipay: /path/to/alipay-reward-image.png
# ---------------------------------------------------------------
# SEO Settings
# ---------------------------------------------------------------

# Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.
# See: https://support.google.com/webmasters/answer/139066
# Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )
canonical: true

# Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.
seo: false

# If true, will add site-subtitle to index page, added in main hexo config.
# subtitle: Subtitle
index_with_subtitle: false

# ---------------------------------------------------------------
# Menu Settings
# ---------------------------------------------------------------

# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -> archives)
menu:
  home: /
  categories: /categories
  #about: /about
  archives: /archives
  tags: /tags
  #sitemap: /sitemap.xml
  #commonweal: /404.html


# Enable/Disable menu icons.
# Icon Mapping:
#   Map a menu item to a specific FontAwesome icon name.
#   Key is the name of menu item and value is the name of FontAwesome icon. Key is case-senstive.
#   When an question mask icon presenting up means that the item has no mapping icon.
menu_icons:
  enable: true
  #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome
  home: home
  about: user
  categories: th
  schedule: calendar
  tags: tags
  archives: archive
  sitemap: sitemap
  commonweal: heartbeat




# ---------------------------------------------------------------
# Scheme Settings
# ---------------------------------------------------------------

# Schemes
scheme: Pisces
#scheme: Mist
#scheme: Pisces


# ---------------------------------------------------------------
# Font Settings
# - Find fonts on Google Fonts (https://www.google.com/fonts)
# - All fonts set here will have the following styles:
#     light, light italic, normal, normal italic, bold, bold italic
# - Be aware that setting too much fonts will cause site running slowly
# - Introduce in 5.0.1
# ---------------------------------------------------------------
font:
  enable: true

  # Uri of fonts host. E.g. //fonts.googleapis.com (Default)
  host:

  # Global font settings used on <body> element.
  global:
    # external: true will load this font family from host.
    external: true
    family: Lato

  # Font settings for Headlines (h1, h2, h3, h4, h5, h6)
  # Fallback to `global` font settings.
  headings:
    external: true
    family:

  # Font settings for posts
  # Fallback to `global` font settings.
  posts:
    external: true
    family:

  # Font settings for Logo
  # Fallback to `global` font settings.
  # The `size` option use `px` as unit
  logo:
    external: true
    family:
    size:

  # Font settings for <code> and code blocks.
  codes:
    external: true
    family:
    size:




# ---------------------------------------------------------------
# Sidebar Settings
# ---------------------------------------------------------------


# Social Links
# Key is the link label showing to end users.
# Value is the target link (E.g. GitHub: https://github.com/iissnan)
social:
  #LinkLabel: Link
  GitHub: https://github.com/xz1035536883
  Weibo: http://weibo.com/u/3287552777?refer_flag=1001030101_
  知乎: https://www.zhihu.com/people/xu-zhe-36-46/activities
# Social Links Icons
# Icon Mapping:
#   Map a menu item to a specific FontAwesome icon name.
#   Key is the name of the item and value is the name of FontAwesome icon. Key is case-senstive.
#   When an globe mask icon presenting up means that the item has no mapping icon.
social_icons:
  enable: true
  # Icon Mappings.
  # KeyMapsToSocialItemKey: NameOfTheIconFromFontAwesome
  GitHub: github
  #Twitter: twitter
  Weibo: weibo
  知乎: globe


# Sidebar Avatar
# in theme directory(source/images): /images/avatar.jpg
# in site  directory(source/uploads): /uploads/avatar.jpg
avatar: /images/tomcate.jpeg


# Table Of Contents in the Sidebar
toc:
  enable: true

  # Automatically add list number to toc.
  number: true


# Creative Commons 4.0 International License.
# http://creativecommons.org/
# Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero
creative_commons: by-nc-sa
#creative_commons:


sidebar:
  # Sidebar Position, available value: left | right
  position: left
  #position: right

  # Sidebar Display, available value:
  #  - post    expand on posts automatically. Default.
  #  - always  expand for all pages automatically
  #  - hide    expand only when click on the sidebar toggle icon.
  #  - remove  Totally remove sidebar including sidebar toggle.
  display: post
  #display: always
  #display: hide
  #display: remove

  # Sidebar offset from top menubar in pixels.
  offset: 12
  offset_float: 0

  # Back to top in sidebar
  b2t: false

  # Scroll percent label in b2t button
  scrollpercent: false


# Blog rolls
#links_title: Links
#links_layout: block
#links_layout: inline
#links:
  #Title: http://example.com/


# ---------------------------------------------------------------
# Post Settings
# ---------------------------------------------------------------

# Automatically scroll page to section which is under <!-- more --> mark.
scroll_to_more: true

# Automatically saving scroll position on each post/page in cookies.
save_scroll: false

# Automatically excerpt description in homepage as preamble text.
excerpt_description: true

# Automatically Excerpt. Not recommend.
# Please use <!-- more --> in the post to control excerpt accurately.
auto_excerpt:
  enable: false
  length: 150

# Post meta display settings
post_meta:
  item_text: true
  created_at: true
  updated_at: false
  categories: true

# Post wordcount display settings
# Dependencies: https://github.com/willin/hexo-wordcount
post_wordcount:
  item_text: true
  wordcount: false
  min2read: false

# Wechat Subscriber
#wechat_subscriber:
  #enabled: true
  #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg
  #description: ex. subscribe to my blog by scanning my public wechat account

# Declare license on posts
post_copyright:
  enable: false
  license: CC BY-NC-SA 3.0
  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/



# ---------------------------------------------------------------
# Misc Theme Settings
# ---------------------------------------------------------------

# Custom Logo.
# !!Only available for Default Scheme currently.
# Options:
#   enabled: [true/false] - Replace with specific image
#   image: url-of-image   - Images's url
custom_logo:
  enabled: false
  image:


# Code Highlight theme
# Available value:
#    normal | night | night eighties | night blue | night bright
# https://github.com/chriskempson/tomorrow-theme
highlight_theme: night


# ---------------------------------------------------------------
# Third Party Services Settings
# ---------------------------------------------------------------

# MathJax Support
mathjax:
  enable: true
  per_page: false
  cdn: //cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML


# Han Support docs: https://hanzi.pro/
han: false

# Swiftype Search API Key
#swiftype_key:

# Baidu Analytics ID
#baidu_analytics:

# Duoshuo ShortName
#duoshuo_shortname:

# Disqus
disqus:
  enable: false
  shortname:
  count: true

# Hypercomments
#hypercomments_id:

# Gentie productKey
#gentie_productKey:

# changyan
changyan:
  enable: false
  appid:
  appkey:

# Support for youyan comments system.
# You can get your uid from http://www.uyan.cc
#youyan_uid: your uid

# Support for LiveRe comments system.
# You can get your uid from https://livere.com/insight/myCode (General web site)
livere_uid: MTAyMC8yODQ0OS81MDIw

# Baidu Share
# Available value:
#    button | slide
# Warning: Baidu Share does not support https.
baidushare:
  type: slide

# Share
#jiathis:
# Warning: JiaThis does not support https.
#add_this_id:

# Share
#duoshuo_share: true

# Google Webmaster tools verification setting
# See: https://www.google.com/webmasters/
#google_site_verification:

# Google Analytics
#google_analytics:

# Yandex Webmaster tools verification setting
# See: https://webmaster.yandex.ru/
#yandex_site_verification:

# CNZZ count
#cnzz_siteid:

# Application Insights
# See https://azure.microsoft.com/en-us/services/application-insights/
# application_insights:

# Make duoshuo show UA
# user_id must NOT be null when admin_enable is true!
# you can visit http://dev.duoshuo.com get duoshuo user id.
duoshuo_info:
  ua_enable: true
  admin_enable: false
  user_id: 0
  #admin_nickname: Author


# Facebook SDK Support.
# https://github.com/iissnan/hexo-theme-next/pull/410
facebook_sdk:
  enable: false
  app_id:       #<app_id>
  fb_admin:     #<user_id>
  like_button:  #true
  webmaster:    #true

# Facebook comments plugin
# This plugin depends on Facebook SDK.
# If facebook_sdk.enable is false, Facebook comments plugin is unavailable.
facebook_comments_plugin:
  enable: false
  num_of_posts: 10  # min posts num is 1
  width: 100%       # default width is 550px
  scheme: light     # default scheme is light (light or dark)

# VKontakte API Support.
# To get your AppID visit https://vk.com/editapp?act=create
vkontakte_api:
  enable: false
  app_id:       #<app_id>
  like:         true
  comments:     true
  num_of_posts: 10


# Show number of visitors to each article.
# You can visit https://leancloud.cn get AppID and AppKey.
leancloud_visitors:
  enable: false
  app_id: #<app_id>
  app_key: #<app_key>

# Show PV/UV of the website/page with busuanzi.
# Get more information on http://ibruce.info/2015/04/04/busuanzi/
busuanzi_count:
  # count values only if the other configs are false
  enable: true
  # custom uv span for the whole site
  site_uv: true
  site_uv_header: 您是第
  site_uv_footer: 个小伙伴
  # custom pv span for the whole site
  site_pv: true
  site_pv_header: 本站总访问量
  site_pv_footer: 次
  # custom pv span for one page only
  page_pv: true
  page_pv_header: 阅读次数
  page_pv_footer:


# Tencent analytics ID
# tencent_analytics:

# Tencent MTA ID
# tencent_mta:


# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO
baidu_push: true

# Google Calendar
# Share your recent schedule to others via calendar page
#
# API Documentation:
# https://developers.google.com/google-apps/calendar/v3/reference/events/list
calendar:
  enable: false
  calendar_id: <required>
  api_key: <required>
  orderBy: startTime
  offsetMax: 24
  offsetMin: 4
  timeZone:
  showDeleted: false
  singleEvents: true
  maxResults: 250

# Algolia Search
algolia_search:
  enable: true
  hits:
    per_page: 10
  labels:
    input_placeholder: Search for Posts
    hits_empty: "We didn't find any results for the search: ${query}"
    hits_stats: "${hits}条相关条目，使用了${time} 毫秒"


# Local search
local_search:
  enable: false
  # if auto, trigger search by changing input
  # if manual, trigger search by pressing enter key or search button
  trigger: auto
  # show top n results per article, show all results by setting to -1
  top_n_per_article: 1

# External URL with BASE64 encrypt & decrypt
# Usage: <span class="exturl"><i class="fa fa-external-link"></i> text url title</span>
# Alias: <span class="exturl"><i class="fa fa-external-link"></i> text url title</span>
exturl: false


#! ---------------------------------------------------------------
#! DO NOT EDIT THE FOLLOWING SETTINGS
#! UNLESS YOU KNOW WHAT YOU ARE DOING
#! ---------------------------------------------------------------

# Motion
use_motion: true

# Fancybox
fancybox: true

# Canvas-nest
canvas_nest: true

# three_waves
three_waves: false

# canvas_lines
canvas_lines: false

# canvas_sphere
canvas_sphere: false

# Only fit scheme Pisces
# Canvas-ribbon
canvas_ribbon: false

# Script Vendors.
# Set a CDN address for the vendor you want to customize.
# For example
#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js
# Be aware that you should use the same version as internal ones to avoid potential problems.
# Please use the https protocol of CDN files when you enable https on your site.
vendors:
  # Internal path prefix. Please do not edit it.
  _internal: lib

  # Internal version: 2.1.3
  jquery:

  # Internal version: 2.1.5
  # See: http://fancyapps.com/fancybox/
  fancybox:
  fancybox_css:

  # Internal version: 1.0.6
  # See: https://github.com/ftlabs/fastclick
  fastclick:

  # Internal version: 1.9.7
  # See: https://github.com/tuupola/jquery_lazyload
  lazyload:

  # Internal version: 1.2.1
  # See: http://VelocityJS.org
  velocity:

  # Internal version: 1.2.1
  # See: http://VelocityJS.org
  velocity_ui:

  # Internal version: 0.7.9
  # See: https://faisalman.github.io/ua-parser-js/
  ua_parser:

  # Internal version: 4.6.2
  # See: http://fontawesome.io/
  fontawesome:

  # Internal version: 1
  # https://www.algolia.com
  algolia_instant_js:
  algolia_instant_css:

  # Internal version: 1.0.0
  # https://github.com/hustcc/canvas-nest.js
  canvas_nest:

  # three
  three:

  # three_waves
  # https://github.com/jjandxa/three_waves
  three_waves:

  # three_waves
  # https://github.com/jjandxa/canvas_lines
  canvas_lines:

  # three_waves
  # https://github.com/jjandxa/canvas_sphere
  canvas_sphere:

  # Internal version: 1.0.0
  # https://github.com/zproo/canvas-ribbon
  canvas_ribbon:

  # Internal version: 3.3.0
  # https://github.com/ethantw/Han
  han:



# Assets
css: css
js: js
images: images

# Theme version
version: 5.1.1

</required></required></app_key></app_id></app_id></user_id></app_id></code></body></pre>


<hr>
<h5 id="官网给出了next配置的文档"><a href="#官网给出了next配置的文档" class="headerlink" title="官网给出了next配置的文档"></a>官网给出了next配置的文档</h5><p>你可以通过官网给出的文档进行配置：<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">http://theme-next.iissnan.com/getting-started.html</a></p>
<p>next还提供第三方服务配置：<a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="external">http://theme-next.iissnan.com/third-party-services.html</a></p>
<p>这些教程里面写的非常的详细。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;上一篇文章介绍了如何利用hexo+github搭建自己的博客，但是它默认的主题是landscape，我个人不是很喜欢，我自己使用的主题是next.&lt;/p&gt;
&lt;p&gt;其实hexo有很多的主题可以选择你可以参考这个链接:&lt;a href=&quot;https://www.zhihu.com/question/24422335&quot;&gt;https://www.zhihu.com/question/24422335&lt;/a&gt;,当然你也可以去官网找你喜欢的主题 :&lt;a href=&quot;https://hexo.io/themes/&quot;&gt;https://hexo.io/themes/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;h5 id=&quot;安装next主题&quot;&gt;&lt;a href=&quot;#安装next主题&quot; class=&quot;headerlink&quot; title=&quot;安装next主题&quot;&gt;&lt;/a&gt;安装next主题&lt;/h5&gt;&lt;p&gt;在你hexo目录下右键选择 git bash here，输入以下命令&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/iissnan/hexo-theme-next themes/next&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="hexo系列教程" scheme="http://www.ryanhome.top/categories/hexo%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://www.ryanhome.top/tags/hexo/"/>
    
      <category term="前端" scheme="http://www.ryanhome.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>hexo教程: (一)hexo+github搭建个人博客</title>
    <link href="http://www.ryanhome.top/2017/06/01/hexo%E6%95%99%E7%A8%8B-hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.ryanhome.top/2017/06/01/hexo教程-hexo-github搭建个人博客/</id>
    <published>2017-06-01T02:06:27.000Z</published>
    <updated>2017-06-01T09:36:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>拥有一个属于自己的独立博客是一件非常cool的事情，常规的方法是搭建服务器，然后对服务器进行部署是一件非常麻烦的事情。知道我无意之间发现了Hexo这个优秀的静态博客框架，再加上最近非常流行的github，这就组成了一个非常方便的博客系统，之前在网上查找教程磕磕碰碰遇到不少问题(可能是之前的教程比较老),自己写这个教程总结一下之前的问题教训，二是给其他想要搭建自己博客的童鞋提供一些参考</p>
<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>本教程用的是windows+hexo目前最新版本</p>
<hr>
<a id="more"></a>
<h5 id="（一）系统环境配置"><a href="#（一）系统环境配置" class="headerlink" title="（一）系统环境配置"></a>（一）系统环境配置</h5><p>使用Hexo之前需要在系统中安装一下工具</p>
<p><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></p>
<p>作用:node.js用来创建hexo博客框架的，我当前安装版本为：v6.10.2</p>
<p>安装教程：<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="external">http://www.runoob.com/nodejs/nodejs-install-setup.html</a></p>
<p>[git 客户端]</p>
<p>作用：把本地的hexo内容提交到github上去，我当前安装的是v2.9.0</p>
<p>下载地址：<a href="http://git-scm.com/download/" target="_blank" rel="external">http://git-scm.com/download/</a></p>
<hr>
<h5 id="（二）安装Hexo"><a href="#（二）安装Hexo" class="headerlink" title="（二）安装Hexo"></a>（二）安装Hexo</h5><p>介绍几个hexo常用的命令，#后面为注释</p>
<pre> hexo g #完整命令hexo generate,用于生成静态文件
 hexo s #完整命令为hexo server,用于启动服务器，主要用来本地预览
 hexo d #完整命令为hexo deploy,用于将本地文件发布到github上
 hexo n #完整命令为hexo new,用于新建一篇文章
 hexo new page "pageName" #新建页面
</pre>    

<p>利用 npm 命令即可安装。在任意磁盘里面点击鼠标右键，选择Git Base </p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/git.png" alt=""></p>
<p>输入安装hexo命令：</p>
<p><code>npm install -g hexo</code></p>
<p>安装完成后，在你喜爱的文件夹下（如E:\Hexo），执行以下指令(在E:\Hexo内点击鼠标右键，选择Git Bash)，Hexo 即会自动在目标文件夹建立网站所需要的所有文件</p>
<p><code>hexo init</code></p>
<p>安装依赖包：</p>
<p><code>npm install</code></p>
<p>让我们看看刚刚下载的hexo文件带来了什么，在E:\hexo内执行以下命令：</p>
<p><code>hexo g</code></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/hexog.png" alt=""></p>
<p><code>hexo s</code></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/hexos.png" alt=""></p>
<p>然后用浏览器访问<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>， 此时，你应该看到了一个漂亮的博客了，当然这个博客只是在本地的，别人是看不到的</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/yulan.png" alt=""></p>
<hr>
<h5 id="（三）注册github账号"><a href="#（三）注册github账号" class="headerlink" title="（三）注册github账号"></a>（三）注册github账号</h5><p>已经有Github帐号跳过此步，首先进入Github进行注册，用户名、邮箱和密码之后都需要用到，自己记好。</p>
<hr>
<h5 id="（四）创建repository"><a href="#（四）创建repository" class="headerlink" title="（四）创建repository"></a>（四）创建repository</h5><p>repository相当于一个仓库，用来放置你的代码文件。首先，登陆进入Github，点击下图红圈地方</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/github.png" alt=""></p>
<p>创建时，只需要填写Repository name即可，当然这个名字的格式必须为youname.github.io，例如我的为xz1035536883.github.io</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/gitres.png" alt=""></p>
<hr>
<h5 id="（五）部署本地文件到github"><a href="#（五）部署本地文件到github" class="headerlink" title="（五）部署本地文件到github"></a>（五）部署本地文件到github</h5><p>既然Repository已经创建了，当然是先把博客放到Github上去看看效果。编辑E：\hexo下的_config.yml文件，建议使用sublime Text2。<br>在_config.yml最下方，添加如下配置(命令中的第一个xz1035536883为Github的用户名,第二个xz1035536883为之前New的Repository的名字,记得改成自己的。另外记得一点，hexo的配置文件中任何’:’后面都是带一个空格的)</p>
<pre>
deploy:
  type: git
  repo:
      github: git@github.com:xz1035536883/xz1035536883.github.io.git,master
</pre>

<p>配置_config.yml并保存，如果配置上面命令，出现ERROR Deployer not found : github，则参考上文的解决方法</p>
<p>如果你是第一次使用Github或者是已经使用过，但没有配置过SSH，则可能需要配置一下:</p>
<p>在Git Bash输入以下指令（E:\Hexo点击鼠标右键），检查是否已经存在了SSH keys。</p>
<p><code>ls -al ~/.ssh</code></p>
<p>如果不存在就没有关系，如果存在的话，直接删除.ssh文件夹里面所有文件：</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/ssh.png" alt=""></p>
<p>输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车，出现提示让你输入的时候直接先回车，好像需要3次，如下图所示：<br><code>ssh-keygen -t rsa -C &quot;358593266@qq.com&quot;</code></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/key.png" alt=""></p>
<p>然后键入以下指令：</p>
<p><code>ssh-agent -s</code></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/key2.png" alt=""></p>
<p>继续输入指令：</p>
<p><code>ssh-add ~/.ssh/id_rsa</code></p>
<p>输入之后，在我这里是出错了，不知道你的有没有出错。</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/key3.png" alt=""></p>
<p>如果你的也是这样子出错了的话，就输入以下指令：</p>
<pre>eval `ssh-agent -s`
ssh-add</pre>

<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/key4.png" alt=""></p>
<p>到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴，不放心的在执行下面命令后，先黏贴在记事本上）：</p>
<p><code>clip &lt; ~/.ssh/id_rsa.pub</code></p>
<p>然后到Github里面，点击右上角的设置图标Settings,找到SSH keys,Ttile随便你命名，Key就黏贴上你刚才复制的key,然后点Add SSH key，最后会让你重新输入下gitHub的密码</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/seeting.png" alt=""></p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/ssh2.png" alt=""></p>
<p>最后还是测试一下吧，键入以下命令：</p>
<p><code>ssh -T git@github.com</code></p>
<p>你可能会看到有警告，没事，输入“yes”就好</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/ceshi.png" alt=""></p>
<p>以上就表示SSH配置好了，执行以下命令部署到Github上。</p>
<pre>hexo g
hexo d
</pre>

<p>如果执行hexo d命令报下名错：</p>
<p><img src="https://raw.githubusercontent.com/xz1035536883/ImageControll/master/res/giterr.png" alt=""></p>
<p>就先安装一下hexo-deployer-git这个模块：</p>
<p><code>npm install hexo-deployer-git --save</code></p>
<p>安装好了继续执行hexo d部署命令，输入gitHub的账号密码，就可以访问了。我的是： xz1035536883.github.io</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;拥有一个属于自己的独立博客是一件非常cool的事情，常规的方法是搭建服务器，然后对服务器进行部署是一件非常麻烦的事情。知道我无意之间发现了Hexo这个优秀的静态博客框架，再加上最近非常流行的github，这就组成了一个非常方便的博客系统，之前在网上查找教程磕磕碰碰遇到不少问题(可能是之前的教程比较老),自己写这个教程总结一下之前的问题教训，二是给其他想要搭建自己博客的童鞋提供一些参考&lt;/p&gt;
&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;p&gt;本教程用的是windows+hexo目前最新版本&lt;/p&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="hexo系列教程" scheme="http://www.ryanhome.top/categories/hexo%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="hexo" scheme="http://www.ryanhome.top/tags/hexo/"/>
    
      <category term="前端" scheme="http://www.ryanhome.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
